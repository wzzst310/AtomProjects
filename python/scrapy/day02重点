### 判断请求是否成功
```python
assert (resp.status_code == 200)
```
### url编码 解码 专门的
-`https://www.baidu.com/s?wd=%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2`

### 字符串格式化的另一种方式
```python
url = "https://www.baidu.com/{}s?wd={},{}".format("传智播客", [1, 2, 3], {"a": "1"})
```
### 使用代理ip
- 准备一堆的ip地址,组成ip池,随机选择一个ip来使用
- 如何选择代理ip
  - {"ip":ip,"times":0}
  - [{}{}{}}{}{}{}],对这个ip的列表进行排序,按照使用次数进行排序
  - 选择使用次数较少的10个ip,从中随机选择一个
- 检查ip的可用性
  - 可以使用request添加超时参数,判断ip地址的质量
  - 在线代理ip质量检测网站

### 携带cookie请求
- 携带一堆cookie进行请求,把cookie组成一个cookie池

### 请求登录之后的网站思路 使用requests提供的请求登录之后的网站思路
- 实例化session
- 先使用session发送请求,登录对网站,把cookie保存在session中
- 再使用session请求登录之后才能的之后才能访问的网站,session能够自动携带登录成功时保存在其中的cookie,进行请求

###  不发送post请求,使用cookie获取登录后的界面
- cookie过期时间很长的网站
- 在cookie过期之前能够拿到所有的数据
- 配合其他程序一起使用,其他程序专门获取cookie,当前程序专门请求页面

### 获取登录后的页面的三种方式
- 实例化session,使用session发送post请求,再使用他获取登录后的页面
- hearders中添加cookie键,值为cookie字符串
- 在请求方法中添加cookies参数,接收字典的cookie.字典形式的cookie中键是cookie的Name,值是cookie的Value
